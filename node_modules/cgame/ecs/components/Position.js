var Vec2     = require('../../util/Vec2.js');
var Attached = require('./Attached.js');

module.exports = (function() {

  // Gives the entity a position in the world along with rotation
  function Position()
  {
    this.location     = Vec2.aquireOrClear(this.location);
    this.scale        = Vec2.aquireOrClear(this.scale).set(1,1);
    this.rotation     = 0;
    this.freeRotation = false; // Disconnected from anything attached

    // Recyclable absolute buffers
    this._absLocation = Vec2.aquireOrClear(this._absLocation);
    this._absScale    = Vec2.aquireOrClear(this._absScale);
  }

  // Recursively check an entity to see if its attached and determine the
  // actual world-position of this object
  Position.getAbsoluteLocation = function(entity)
  {
    var v = entity.Position._absLocation;
    v.assign(entity.Position.location);

    if (!entity.Attached) {
      return v;
    }

    var parent = entity.Attached.parentEntity;
    var r = Position.getAbsoluteRotation(entity);

    v.rotate(Position.getAbsoluteRotation(parent));

    // Scale by parent's scale
    var pScale = Position.getAbsoluteScale(parent);
    v.set(v.x * pScale.x, v.y * pScale.y);

    return v.add(Position.getAbsoluteLocation(parent));
  };

  // Recursively determine the scale we're at
  Position.getAbsoluteScale = function(entity)
  {
    var v = entity.Position._absScale;
    v.assign(entity.Position.scale);

    if (!entity.Attached) {
      return v;
    }

    var parentScale =
      Position.getAbsoluteScale(entity.Attached.parentEntity);

    return v.set(v.x * parentScale.x, v.y * parentScale.y);
  };

  // In case of attached
  Position.getAbsoluteRotation = function(entity)
  {
    if (!entity.Attached || entity.Position.freeRotation)
      return entity.Position.rotation;

    var r = entity.Position.rotation +
      Position.getAbsoluteRotation(entity.Attached.parentEntity);

    return r % (Math.PI*2);
  };

  // What relative rotation will give us the desired world rotation? In other
  // words, what rotation do we need to set on this (attached) entity such
  // that its absolute rotation is r?
  Position.toRelativeRotation = function(entity, r)
  {
    if (!entity.Attached || entity.Position.freeRotation)
      return r;

    r -= Position.getAbsoluteRotation(entity.Attached.parentEntity);

    return r % (Math.PI*2);
  };

  return Position;

})();
